name: CD with Docker

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. 코드 체크아웃
    - uses: actions/checkout@v3

    # 2. JDK 설정 (Gradle 빌드용)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        
    # 3. application.yml 파일 생성 (GitHub Secrets에서 Base64로 가져와 디코딩)
    - name: Create application YML
      run: |
        mkdir -p onetry/src/main/resources
        echo "${{ secrets.APPLICATION_YML }}" | base64 --decode > onetry/src/main/resources/application.yml

    # 5. Gradle 빌드 (테스트 제외)
    - name: Run chmod to make gradlew executable
      run: chmod +x ./onetry/gradlew
    
    - name: Run Gradle build
      uses: gradle/gradle-build-action@v2.6.0
      with:
        arguments: build -x test
        working-directory: onetry


    # 6. Docker 이미지 빌드
    - name: Build Docker image
      run: |
        docker build -t "${{ secrets.DOCKER_HUB_USERNAME }}"/onetry-spring-server:0.0.1 ./onetry

    # 7. Docker Hub에 이미지 푸시
    - name: Push Docker image to Docker Hub
      run: |
        echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
        docker push "${{ secrets.DOCKER_HUB_USERNAME }}"/onetry-spring-server:0.0.1
    
    # 8. SSH로 원격 서버에 접속하여 Docker 이미지 Pull 및 컨테이너 재시작
    - name: Deploy via SSH (Docker Pull and Restart)
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        password: ${{ secrets.SERVER_PWD }}
        port: ${{ secrets.SERVER_PORT }}
        script_stop: true
        script: |
          # Docker Hub 로그인
          sudo docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin <<< "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"
    
          # 기존 컨테이너 중지 및 삭제
          sudo docker ps -q --filter "ancestor=${{ secrets.DOCKER_HUB_USERNAME }}/onetry-spring-server:0.0.1" | xargs -r sudo docker stop
          sudo docker ps -a -q --filter "ancestor=${{ secrets.DOCKER_HUB_USERNAME }}/onetry-spring-server:0.0.1" | xargs -r sudo docker rm
          
          # 수정전 버전의 image를 삭제
          sudo docker rmi kanghyungjun/onetry-spring-server:0.0.1
          
          # 최신 이미지 pull
          sudo docker pull "${{ secrets.DOCKER_HUB_USERNAME }}/onetry-spring-server:0.0.1"
    
          # 새 컨테이너로 이미지 실행
          sudo docker run -d --network onetry-server-network -p 8080:8080 -v /home/onet/be/spring/upload:/home/onet/be/spring/upload "${{ secrets.DOCKER_HUB_USERNAME }}/onetry-spring-server:0.0.1"

